generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pessoa {
  id                    Int                   @id @default(autoincrement())
  nome                  String                @unique
  cnpj                  String                @unique
  endereco              String?
  cep                   String?
  bairro                String?
  cidade                String?
  uf                    String?
  ativa                 Boolean               @default(true)
  created_at            DateTime              @default(now())
  updateda_at           DateTime              @updatedAt
  empresas_has_usuarios EmpresasHasUsuarios[]
  pessoas_has_tipos     PessoasHasTipos[]
  PessoasHasUnidades    PessoasHasUnidades[]
  Unidade               Unidade[]

  @@map("pessoas")
}

model TiposPessoa {
  id                Int               @id @default(autoincrement())
  nome              String            @unique
  ativo             Boolean           @default(true)
  created_at        DateTime          @default(now())
  updateda_at       DateTime          @updatedAt
  pessoas_has_tipos PessoasHasTipos[]

  @@map("tipos_pessoas")
}

model Cargo {
  id                    Int                   @id @default(autoincrement())
  nome                  String                @unique
  ativo                 Boolean               @default(true)
  created_at            DateTime              @default(now())
  updateda_at           DateTime              @updatedAt
  empresas_has_usuarios EmpresasHasUsuarios[]

  @@map("cargos")
}

model PessoasHasTipos {
  id        Int         @id @default(autoincrement())
  pessoa_id Int
  tipo_id   Int
  pessoa    Pessoa      @relation(fields: [pessoa_id], references: [id])
  tipo      TiposPessoa @relation(fields: [tipo_id], references: [id])

  createdAt   DateTime @default(now())
  updateda_at DateTime @updatedAt

  @@map("pessoas_has_tipo")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  nome        String
  username    String   @unique
  password    String
  secret      String   @default(uuid())
  ativo       Boolean  @default(true)
  created_at  DateTime @default(now())
  updateda_at DateTime @updatedAt

  empresas_has_usuarios EmpresasHasUsuarios[]

  @@map("usuarios")
}

model EmpresasHasUsuarios {
  id          Int      @id @default(autoincrement())
  usuario_id  Int
  empresa_id  Int
  cargo_id    Int
  createdAt   DateTime @default(now())
  updateda_at DateTime @updatedAt

  user   User   @relation(fields: [usuario_id], references: [id])
  pessoa Pessoa @relation(fields: [empresa_id], references: [id])
  cargo  Cargo  @relation(fields: [cargo_id], references: [id])

  @@map("empresas_has_usuarios")
}

model Unidade {
  id            Int      @id @default(autoincrement())
  condominio_id Int
  codigo        String   @unique
  ativo         Boolean  @default(true)
  createdAt     DateTime @default(now())
  updateda_at   DateTime @updatedAt

  PessoasHasUnidades PessoasHasUnidades[]
  Notificacao        Notificacao[]

  pessoa Pessoa @relation(fields: [condominio_id], references: [id])

  @@map("unidades")
}

model PessoasHasUnidades {
  id          Int      @id @default(autoincrement())
  unidade_id  Int
  pessoa_id   Int
  createdAt   DateTime @default(now())
  updateda_at DateTime @updatedAt

  pessoa  Pessoa  @relation(fields: [pessoa_id], references: [id])
  unidade Unidade @relation(fields: [unidade_id], references: [id])

  @@map("pessoas_has_unidades")
}

model TipoInfracao {
  id          Int      @id @default(autoincrement())
  descricao   String   @unique
  ativo       Boolean  @default(true)
  createdAt   DateTime @default(now())
  updateda_at DateTime @updatedAt

  Notificacao Notificacao[]

  @@map("tipos_infracao")
}

model Notificacao {
  id                  Int      @id @default(autoincrement())
  unidade_id          Int
  infracao_id         Int
  tipo_registro       Int      @default(1)
  data_emissao        DateTime @default(now())
  data_infracao       DateTime @default(now())
  n_notificacao       String
  detalhes_infracao   String
  fundamentacao_legal String   @db.Text
  observacao          String   @default("") @db.Text
  createdAt           DateTime @default(now())
  updateda_at         DateTime @updatedAt

  unidade      Unidade      @relation(fields: [unidade_id], references: [id])
  tipoInfracao TipoInfracao @relation(fields: [infracao_id], references: [id])

  @@map("notificacoes")
}
